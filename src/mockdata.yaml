--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: code.c, Line: 5, Column: 15 }
Function:        main
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: code.c, Line: 5, Column: 15 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: code.c, Line: 5, Column: 12 }
Function:        main
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: code.c, Line: 5, Column: 15 }
Function:        main
Args:
  - String:          load eliminated by PRE
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: code.c, Line: 5, Column: 12 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: code.c, Line: 5, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: code.c, Line: 5, Column: 15 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: code.c, Line: 5, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: code.c, Line: 0, Column: 0 }
Function:        main
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: code.c, Line: 0, Column: 0 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: code.c, Line: 4, Column: 3 }
Function:        main
Args:
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            UnsafeMemDep
DebugLoc:        { File: code.c, Line: 4, Column: 3 }
Function:        main
Args:
  - String:          'loop not vectorized: '
  - String:          'unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop'
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: code.c, Line: 4, Column: 3 }
Function:        main
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: code.c, Line: 2, Column: 7 }
Function:        main
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-3'
  - String:          ' and with tree size '
  - TreeSize:        '2'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: code.c, Line: 4, Column: 3 }
Function:        main
Args:
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with a breakout at trip '
  - BreakoutTrip:    '0'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: code.c, Line: 0, Column: 0 }
Function:        main
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: code.c, Line: 0, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: code.c, Line: 0, Column: 0 }
Function:        main
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: code.c, Line: 0, Column: 0 }
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: code.c, Line: 1, Column: 0 }
Function:        main
Args:
  - NumStackBytes:   '4008'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: code.c, Line: 1, Column: 0 }
Function:        main
Args:
  - NumInstructions: '20'
  - String:          ' instructions in function'
...
